<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.inforcad</groupId>
	<artifactId>prefaleague</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>GWT Maven Archetype</name>

	<properties>
		<!-- Convenience property to set the GWT version -->
		<gwtVersion>2.5.1</gwtVersion>
		<!-- GWT needs at least java 1.5 -->
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<datanucleus.jpa.version>3.1.3</datanucleus.jpa.version>
		<appengine.app.version>1</appengine.app.version>
		<appengine.target.version>1.8.0</appengine.target.version>
        <appEngineHome>/Users/rroldan/.m2/repository/com/google/appengine/appengine-java-sdk/1.8.0/appengine-java-sdk/appengine-java-sdk-1.8.0</appEngineHome>

	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
			<classifier>sources</classifier>
		</dependency>

		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>4.0b3</version>
		</dependency>

		<dependency>
			<groupId>com.github.gwtbootstrap</groupId>
			<artifactId>gwt-bootstrap</artifactId>
			<version>2.2.1.0</version>
		</dependency>

		<!-- Compile/runtime dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-endpoints</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JPA -->

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<version>${datanucleus.jpa.version}</version>
		</dependency>

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>${datanucleus.jpa.version}</version>
		</dependency>

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>${datanucleus.jpa.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>2.1.2</version>

			<!-- Need to exclude the enhancer since it interfere with the enhancer 
				plugin. -->
			<exclusions>
				<exclusion>
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-enhancer</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo-api</artifactId>
			<version>3.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_2.0_spec</artifactId>
			<version>1.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.6</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>



	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.5.1</version>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- <source>1.7</source> <target>1.7</target> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
			</plugin>
			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.5.1</version>

				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test</goal>
							<!-- <goal>i18n</goal> <goal>generateAsync</goal> -->
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
					documentation at codehaus.org -->
				<configuration>
					<!-- <appEngineHome>${appEngineSdk}</appEngineHome> -->
					<appEngineHome>${appEngineHome}</appEngineHome>
					<runTarget>prefaleague.html</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<!-- <i18nMessagesBundle>org.inforcad.prefaleague.client.Messages</i18nMessagesBundle> -->
					<logLevel>INFO</logLevel>

					<server>com.google.appengine.tools.development.gwt.AppEngineLauncher</server>

				</configuration>
			</plugin>




			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>${datanucleus.jpa.version}</version>

				<configuration>
					<api>JPA</api>
					<enhancerName>ASM</enhancerName>
					<log4jConfiguration>${basedir}/src/main/resources/log4j.properties</log4jConfiguration>
					<mappingIncludes>**/shared/*.class</mappingIncludes>
					<verbose>true</verbose>
					<metadataDirectory>target/prefaleague-1.0/WEB-INF/classes</metadataDirectory>

				</configuration>

				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${datanucleus.jpa.version}</version>
					</dependency>
					<dependency>
						<!-- enhancement requires the gwt-user jar because many of the entity 
							classes implement IsSerializable and the enhancer needs it on the classpath 
							to function. because the gwt-user library has a scope of provided, it is 
							only available on the compilation and test classpath, and is not transitive 
							to the ehancement classpath. -->
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwtVersion}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<!-- Needed to remove the build errors in Eclipse since the life cycle 
			mapping is not supported. See link for more info: http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>

					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.datanucleus</groupId>
										<artifactId>maven-datanucleus-plugin</artifactId>
										<versionRange>${datanucleus.jpa.version}</versionRange>
										<phase>process-classes</phase>
										<goals>
											<goal>enhance</goal>
										</goals>
									</pluginExecutionFilter>

									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
